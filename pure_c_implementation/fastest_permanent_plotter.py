"""

===== Module Descriptor =====

A Python file for plotting the data from the first three columns of the file fast_permanent.csv generated by the permanent_solver.c code. The output of this program is the png scatterplot_colored_by_fastest_algorithm_legend.png. This visualization will make it easy to read the data and figure out for which combinations of "Squareness" and "Matrix Size" each algorithm performs the best.

"""

import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("fast_permanent.csv", sep=",", names=["m_div_n", "size_as_n", "algorithm", "M", "N", "Mean Time to Solve", "Standard Deviation", "x Faster Combinatorial", "x Faster Glynn", "x Faster Ryser", "Speed Combinatorial", "Speed Glynn", "Speed Ryser"], skiprows=1)
plt.figure(figsize=(8,6))
algorithm_names = ["Combinatorial", "Glynn", "Ryser"]
scatter = plt.scatter(df.size_as_n, 
            df.m_div_n,
            s=150,
            c=df.algorithm.astype('category').cat.codes)
plt.xlabel("'Size' as N", size=24)
plt.ylabel("M/N as 'Squareness'", size=24)
plt.title("Fastest Algorithm for Solving the \nPermanent of a MxN Matrix", size=20)

# add legend to the plot with names
plt.legend(handles=scatter.legend_elements()[0], labels=algorithm_names, title="Fastest Algorithm")
plt.savefig("scatterplot_colored_by_fastest_algorithm_legend.png", format='png',dpi=150)
print("Go look at the scatterplot_colored_by_fastest_algorithm_legend.png that was created and look for the patterns!")

